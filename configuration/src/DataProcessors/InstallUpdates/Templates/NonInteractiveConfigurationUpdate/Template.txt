///////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
//
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

// updater.js

function include (fileName) {
  var stream = new ActiveXObject('Adodb.Stream')
  stream.CharSet = 'UTF-16'
  stream.Type = 2 // adTypeText
  stream.Open()
  stream.LoadFromFile(fileName)
  var code = stream.readText()
  stream.Close()
  return code
}

var oHTA
var scriptFileName = WScript.ScriptFullName
var scriptDir = scriptFileName.substr(0, scriptFileName.lastIndexOf('\\') + 1)

eval(include(scriptDir + 'helpers.js'))
eval(include(scriptDir + 'main.js'))

//
function setProgress (statusText) {
  statusText += '...'
  log(statusText)
}

function checkResult (ret) {
  if (ret === 0) {
    return
  }
  log(format('[SplashScreenMessageStepError]', ret), true)
  
  finalize()
  ClearTempFiles()

  WScript.Quit(ret)
}

setProgress('[MessageInitialization]')
var ret = initialize()
checkResult(ret)

setProgress('[TheUserShutdownMessage]')
ret = disconnectAndBlockUsers()
checkResult(ret)

if (createBackup) {
  setProgress('[TheMessageCreatingABackupCopyOfTheDatabase]')
  ret = backupDB()
  checkResult(ret)
}

if (executeDeferredHandlers) {
  setProgress('[MessageExecutingDeferredUpdateHandlers]')
  ret = runDeferredHandlers()
  checkResult(ret)
}

if (cfgFileNames.length === 0) {
  if (updateConfiguration){
    setProgress('[ConfigurationUpdateMessage]')
    ret = updateDbCfg()
    checkResult(ret)
  } 
  if (loadExtentions){
    setProgress('[MessageLoadingExtensions]')
    ret = executeLoadExt()
    checkResult(ret)
  }
} else {
  for (var cfgFileIndex = 0; cfgFileIndex < cfgFileNames.length; cfgFileIndex++) {
    var fileProperties = GetRequired(cfgFileNames[cfgFileIndex])

    setProgress(format('[UpdateFileDownloadMessage]', cfgFileIndex + 1, cfgFileNames.length))
    ret = updateCfg(fileProperties.filePath)
    //
    if (ret !== 0) {
      ret = loadCfg(fileProperties.filePath)
    }
    checkResult(ret)

    setProgress(format('[MessageConfigurationUpdateParameters]', cfgFileIndex + 1, cfgFileNames.length))
    ret = updateDbCfg()
    checkResult(ret)

    if (fileProperties.requiredVersion || (cfgFileIndex + 1 === cfgFileNames.length)) {
      setProgress(format('[MessageExecutingUpdateHandlers]', cfgFileIndex + 1, cfgFileNames.length))
      ret = executeUpdate(cfgFileIndex + 1 === cfgFileNames.length)
      checkResult(ret)
    }
  }
}

setProgress('[TheConnectionPermissionMessage]')
ret = allowConnections()
checkResult(ret)

setProgress('[UpdateCompletionMessage]')
finalize(true)
ClearTempFiles()
